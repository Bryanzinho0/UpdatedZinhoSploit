local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local Camera = Workspace.CurrentCamera
local player = Players.LocalPlayer
local espEnabled = false
local tracersEnabled = false
local aimbotEnabled = false
local maxAmmoEnabled = false
local noclipEnabled = false
local godModeEnabled = false
local hitboxSize = 2
local aimbotToggleKey = Enum.KeyCode.E
local noclipToggleKey = Enum.KeyCode.N
local espBoxes = {}
local espConnections = {}
local walkSpeed = 16
local maxWalkSpeed = 20
local projectileSpeed = 300
local predictionStrength = 1

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "ZinhoSploitGui"
screenGui.Parent = player:WaitForChild("PlayerGui")

-- Create Main Frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 300, 0, 450)
frame.Position = UDim2.new(0.5, -150, 0.5, -225)
frame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.fromRGB(0, 0, 0)
frame.Parent = screenGui

-- Add round edges to Frame
local frameCorner = Instance.new("UICorner")
frameCorner.CornerRadius = UDim.new(0.1, 0)
frameCorner.Parent = frame

-- Make frame draggable
local dragging
local dragInput
local dragStart
local startPos

local function update(input)
    local delta = input.Position - dragStart
    frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        update(input)
    end
end)

-- Create Title Label
local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, 0, 0, 50)
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
titleLabel.BorderSizePixel = 0
titleLabel.Text = "Zinho Sploit"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 28
titleLabel.Parent = frame

-- Create Button Function
local function createButton(text, position)
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(0, 120, 0, 30)
    button.Position = position
    button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    button.BorderSizePixel = 1
    button.BorderColor3 = Color3.fromRGB(0, 0, 0)
    button.Text = text
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.Parent = frame
    return button
end

-- Create Buttons
local button1 = createButton("Give BTools", UDim2.new(0.05, 0, 0.15, 0))
local button2 = createButton("Toggle ESP", UDim2.new(0.55, 0, 0.15, 0))
local button3 = createButton("Toggle Tracers", UDim2.new(0.05, 0, 0.25, 0))
local button4 = createButton("Toggle Aimbot", UDim2.new(0.55, 0, 0.25, 0))
local button5 = createButton("Max Ammo", UDim2.new(0.05, 0, 0.35, 0))
local button6 = createButton("No Clip", UDim2.new(0.55, 0, 0.35, 0))
local button7 = createButton("God Mode", UDim2.new(0.05, 0, 0.45, 0))
local button8 = createButton("Suicide", UDim2.new(0.55, 0, 0.45, 0))

-- Create Hitbox Size Slider
local hitboxLabel = Instance.new("TextLabel")
hitboxLabel.Size = UDim2.new(0.9, 0, 0, 20)
hitboxLabel.Position = UDim2.new(0.05, 0, 0.55, 0)
hitboxLabel.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
hitboxLabel.Text = "Hitbox Size: " .. tostring(hitboxSize)
hitboxLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxLabel.Font = Enum.Font.Gotham
hitboxLabel.TextSize = 18
hitboxLabel.Parent = frame

local hitboxSlider = Instance.new("TextBox")
hitboxSlider.Size = UDim2.new(0.9, 0, 0, 30)
hitboxSlider.Position = UDim2.new(0.05, 0, 0.6, 0)
hitboxSlider.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
hitboxSlider.Text = tostring(hitboxSize)
hitboxSlider.TextColor3 = Color3.fromRGB(255, 255, 255)
hitboxSlider.Font = Enum.Font.Gotham
hitboxSlider.TextSize = 18
hitboxSlider.Parent = frame

-- Add round edges to Hitbox Label and Slider
local hitboxLabelCorner = Instance.new("UICorner")
hitboxLabelCorner.CornerRadius = UDim.new(0.1, 0)
hitboxLabelCorner.Parent = hitboxLabel

local hitboxSliderCorner = Instance.new("UICorner")
hitboxSliderCorner.CornerRadius = UDim.new(0.1, 0)
hitboxSliderCorner.Parent = hitboxSlider

hitboxSlider.FocusLost:Connect(function()
    local newSize = tonumber(hitboxSlider.Text)
    if newSize then
        hitboxSize = newSize
        hitboxLabel.Text = "Hitbox Size: " .. tostring(hitboxSize)
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                player.Character.Head.Size = Vector3.new(hitboxSize, hitboxSize, hitboxSize)
                player.Character.Head.Transparency = 0.5
            end
        end
    else
        hitboxSlider.Text = tostring(hitboxSize)
    end
end)

-- Add Button Functionality
button1.MouseButton1Click:Connect(function()
    local function giveBTools()
        local tool1 = Instance.new("HopperBin", player.Backpack)
        tool1.BinType = Enum.BinType.Hammer
        tool1.Name = "Delete Tool"

        local tool2 = Instance.new("HopperBin", player.Backpack)
        tool2.BinType = Enum.BinType.Clone
        tool2.Name = "Clone Tool"

        local tool3 = Instance.new("HopperBin", player.Backpack)
        tool3.BinType = Enum.BinType.Grab
        tool3.Name = "Move Tool"
    end

    giveBTools()
    print("BTools given to player")
end)

-- ESP Code
local function createESP(player)
    local box = Drawing.new("Square")
    box.Thickness = 1
    box.Color = Color3.new(1, 1, 1)
    box.Filled = false
    box.Visible = false

    local tracer = Drawing.new("Line")
    tracer.Thickness = 1
    tracer.Color = Color3.new(1, 1, 1)
    tracer.Visible = false

    local name = Drawing.new("Text")
    name.Color = Color3.new(1, 1, 1)
    name.Size = 14
    name.Center = true
    name.Outline = true
    name.Visible = false

    espBoxes[player] = {Box = box, Tracer = tracer, Name = name}
end

local function updateESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and espBoxes[player] then
            local character = player.Character
            if character and character:FindFirstChild("HumanoidRootPart") and character:FindFirstChild("Humanoid") and character.Humanoid.Health > 0 then
                local rootPart = character.HumanoidRootPart
                local rootPos, onScreen = Camera:WorldToViewportPoint(rootPart.Position)
                if onScreen then
                    local head = character:FindFirstChild("Head")
                    local leg = character:FindFirstChild("HumanoidRootPart")
                    if head and leg then
                        local headPos = Camera:WorldToViewportPoint(head.Position)
                        local legPos = Camera:WorldToViewportPoint(leg.Position)
                        local size = Vector2.new(1000 / rootPos.Z, math.abs(headPos.Y - legPos.Y))

                        local box = espBoxes[player].Box
                        box.Size = size
                        box.Position = Vector2.new(rootPos.X - size.X / 2, rootPos.Y - size.Y / 2)
                        box.Visible = espEnabled

                        local tracer = espBoxes[player].Tracer
                        tracer.From = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y)
                        tracer.To = Vector2.new(rootPos.X, rootPos.Y)
                        tracer.Visible = tracersEnabled

                        local name = espBoxes[player].Name
                        name.Text = player.Name
                        name.Position = Vector2.new(rootPos.X, rootPos.Y + size.Y / 2)
                        name.Visible = espEnabled
                    end
                else
                    espBoxes[player].Box.Visible = false
                    espBoxes[player].Tracer.Visible = false
                    espBoxes[player].Name.Visible = false
                end
            else
                espBoxes[player].Box.Visible = false
                espBoxes[player].Tracer.Visible = false
                espBoxes[player].Name.Visible = false
            end
        end
    end
end

local function enableESP()
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            createESP(player)
        end
    end
    table.insert(espConnections, Players.PlayerAdded:Connect(function(player)
        createESP(player)
    end))
    table.insert(espConnections, Players.PlayerRemoving:Connect(function(player)
        if espBoxes[player] then
            espBoxes[player].Box:Remove()
            espBoxes[player].Tracer:Remove()
            espBoxes[player].Name:Remove()
            espBoxes[player] = nil
        end
    end))
    table.insert(espConnections, RunService.RenderStepped:Connect(updateESP))
end

local function disableESP()
    for _, conn in pairs(espConnections) do
        conn:Disconnect()
    end
    espConnections = {}
    for _, esp in pairs(espBoxes) do
        esp.Box:Remove()
        esp.Tracer:Remove()
        esp.Name:Remove()
    end
    espBoxes = {}
end

button2.MouseButton1Click:Connect(function()
    espEnabled = not espEnabled
    if espEnabled then
        enableESP()
        print("ESP enabled")
    else
        disableESP()
        print("ESP disabled")
    end
end)

button3.MouseButton1Click:Connect(function()
    tracersEnabled = not tracersEnabled
    if tracersEnabled then
        enableESP()
        print("Tracers enabled")
    else
        disableESP()
        print("Tracers disabled")
    end
end)

-- Aimbot Code with Prediction
local targetPlayer = nil

local function predictPosition(target)
    local targetRoot = target.Character.HumanoidRootPart
    local targetVelocity = targetRoot.Velocity
    local distance = (targetRoot.Position - player.Character.HumanoidRootPart.Position).Magnitude
    local timeToHit = distance / projectileSpeed
    return targetRoot.Position + targetVelocity * timeToHit * predictionStrength
end

local function getClosestPlayerToCursor()
    local closestPlayer
    local shortestDistance = math.huge

    for _, player in pairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") and player.Character:FindFirstChild("Humanoid") and player.Character.Humanoid.Health > 0 then
            local head = player.Character.Head
            local pos = Camera:WorldToViewportPoint(head.Position)
            local distance = (Vector2.new(pos.X, pos.Y) - UserInputService:GetMouseLocation()).Magnitude
            if distance < shortestDistance then
                closestPlayer = player
                shortestDistance = distance
            end
        end
    end

    return closestPlayer
end

local function aimAt(target)
    local predictedPos = predictPosition(target)
    local pos = Camera:WorldToViewportPoint(predictedPos)
    mousemoverel((pos.X - UserInputService:GetMouseLocation().X) / 2, (pos.Y - UserInputService:GetMouseLocation().Y) / 2)
end

RunService.RenderStepped:Connect(function()
    if aimbotEnabled then
        if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character:FindFirstChild("Head") or targetPlayer.Character.Humanoid.Health <= 0 then
            targetPlayer = getClosestPlayerToCursor()
        end
        if targetPlayer then
            aimAt(targetPlayer)
        end
    end
end)

button4.MouseButton1Click:Connect(function()
    aimbotEnabled = not aimbotEnabled
    targetPlayer = nil
    if aimbotEnabled then
        print("Aimbot enabled")
    else
        print("Aimbot disabled")
    end
end)

-- Max Ammo Code for South Bronx
local function maxAmmo()
    maxAmmoEnabled = not maxAmmoEnabled
    if maxAmmoEnabled then
        print("Max Ammo enabled")
    else
        print("Max Ammo disabled")
    end
end

local function setMaxAmmo(tool)
    local maxAmmo = 30  -- Default max ammo; adjust as needed
    if tool and tool:FindFirstChild("Ammo") then
        tool.Ammo.Value = maxAmmo
        print(tool.Name .. " ammo set to max")
    end
end

button5.MouseButton1Click:Connect(maxAmmo)

-- Monitor when the player equips a tool
player.Backpack.ChildAdded:Connect(function(child)
    if child:IsA("Tool") and (child.Name == "Draco" or child.Name == "GlockS" or child.Name == "GlockBeam" or child.Name == "Glock") and child:FindFirstChild("Ammo") then
        child.Equipped:Connect(function()
            if maxAmmoEnabled then
                setMaxAmmo(child)
            end
        end)
    end
end)

-- Also check currently equipped tool in case the script runs while the tool is already equipped
if player.Character then
    for _, tool in pairs(player.Character:GetChildren()) do
        if tool:IsA("Tool") and (tool.Name == "Draco" or tool.Name == "GlockS" or tool.Name == "GlockBeam" or tool.Name == "Glock") and tool:FindFirstChild("Ammo") then
            tool.Equipped:Connect(function()
                if maxAmmoEnabled then
                    setMaxAmmo(tool)
                end
            end)
        end
    end
end

-- No Clip Code
local function toggleNoclip()
    noclipEnabled = not noclipEnabled
    if noclipEnabled then
        print("No Clip enabled")
    else
        print("No Clip disabled")
    end
end

RunService.Stepped:Connect(function()
    if noclipEnabled then
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end
    else
        for _, part in pairs(player.Character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end)

UserInputService.InputBegan:Connect(function(input, isProcessed)
    if not isProcessed and input.KeyCode == noclipToggleKey then
        toggleNoclip()
    end
end)

button6.MouseButton1Click:Connect(toggleNoclip)

-- God Mode Code
local function toggleGodMode()
    godModeEnabled = not godModeEnabled
    if godModeEnabled then
        player.Character.Humanoid.Name = "1"
        local clone = player.Character["1"]:Clone()
        clone.Parent = player.Character
        clone.Name = "Humanoid"
        player.Character["1"]:Destroy()
        player.Character:FindFirstChildOfClass("Humanoid").Health = math.huge
        RunService.Stepped:Connect(function()
            player.Character:FindFirstChildOfClass("Humanoid").Health = math.huge
        end)
        print("God Mode enabled")
    else
        print("God Mode disabled")
    end
end

button7.MouseButton1Click:Connect(toggleGodMode)

-- Suicide Button
button8.MouseButton1Click:Connect(function()
    player.Character.Humanoid.Health = 0
end)

-- Toggle Aimbot with Key
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if not isProcessed and input.KeyCode == aimbotToggleKey then
        aimbotEnabled = not aimbotEnabled
        targetPlayer = nil
        if aimbotEnabled then
            print("Aimbot enabled")
        else
            print("Aimbot disabled")
        end
    end
end)

-- Function to toggle GUI visibility
local guiVisible = true
local function toggleGuiVisibility()
    guiVisible = not guiVisible
    screenGui.Enabled = guiVisible
end

-- Bind the toggle function to the "Insert" key
UserInputService.InputBegan:Connect(function(input, isProcessed)
    if not isProcessed and input.KeyCode == Enum.KeyCode.Insert then
        toggleGuiVisibility()
    end
end)
